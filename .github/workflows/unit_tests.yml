# This workflow will install Python dependencies,
# run tests with a variety of Python versions,
# and upload a new build to TestPyPI.
#
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit tests

on: [ push ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        tox-env: [
          py36,
          py37,
          py38,
          py39,
          pypy3
        ]
        include:
          - tox-env: py36
            python-version: 3.6
          - tox-env: py37
            python-version: 3.7
          - tox-env: py38
            python-version: 3.8
          - tox-env: py39
            python-version: 3.9
          - tox-env: pypy3
            python-version: pypy-3.8

        exclude:
          - os: windows-latest
            tox-env: pypy3
          - os: macos-latest
            tox-env: pypy3
    env:
      TOXENV: ${{ matrix.tox-env }}

    steps:
    - uses: actions/checkout@v3.0.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.0.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: Gr1N/setup-poetry@v7

    - name: Install library and dependencies
      run: |
        poetry run pip install --upgrade pip setuptools
        poetry install
        poetry run pip install tox-gh-actions

    - name: Run Tox (Pytest + Coverage)
      run: |
        poetry run tox
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Results to CodeCov
      if: success()
      uses: codecov/codecov-action@v2.1.0
      with:
        env_vars: TOXENV
        fail_ci_if_error: false
        files: ./tests/reports/coverage-html/index.html,./tests/reports/coverage.xml
        flags: unittests
        name: ${{ matrix.os }}-${{ matrix.tox-env }}
        path_to_write_report: ./tests/reports/codecov_report.txt
        token: ${{ secrets.CODECOV_TOKEN }}


  # testpypi-deploy:
  #   name: Build and publish Python üêç distributions üì¶ to TestPyPI
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #   - uses: actions/checkout@v3.0.0

  #   - name: Publish distribution üì¶ to Test PyPI
  #     uses: JRubics/poetry-publish@v1.10
  #     continue-on-error: true
  #     with:
  #       ignore_dev_requirements: 'yes'
  #       pypi_token: ${{ secrets.TEST_PYPI_PASSWORD }}
  #       repository_name: 'testpypi'
  #       repository_url: 'https://test.pypi.org/legacy/'
